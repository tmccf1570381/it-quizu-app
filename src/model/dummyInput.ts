export const dummyInput = {'target': 'ANS',
'no': '21',
'contents': [{'question': 'ネットワークエンジニアが、Amazon EC2 Auto Scaling グループを設定して、Linux ベースのネットワークアプライアンスを高可用性アーキテクチャで実行する必要があります。ネットワークエンジニアは、Auto Scaling グループの新しい起動テンプレートを設定しています。\n  \n  \n  ネットワークアプライアンスには、プライマリネットワークインターフェイスに加えて、インターネット経由でホストとトラフィックを交換するためにアプリケーションによって排他的に使用される 2 番目のネットワークインターフェイスが必要です。同社は、2 番目のネットワークインターフェイスのパブリック IP アドレスとして使用する必要がある Elastic IP アドレスを含む、Bring Your Own IP (BYOIP) プールを設定しました。\n  \n\n  最適なアーキテクチャの実装方法を選択してください。\n',
  'option': ['起動テンプレートで 2 つのネットワークインターフェイスを構成します。プライマリネットワークインターフェイスをプライベートサブネットの 1 つに作成するように定義します。2 番目のネットワークインターフェイスには、パブリックサブネットの 1 つを選択します。パブリック IP アドレスのソースとして BYOIP プール ID を選択します。',
   'Auto Scaling グループの作成時に、プライマリネットワークインターフェイスのサブネットを選択します。ユーザーデータオプションを使用して、cloud-init スクリプトを実行し、2 番目のネットワークインターフェイスを割り当て、BYOIP プールから Elastic IP アドレスを関連付けます。',
   'インスタンスの起動時に Auto Scaling グループのライフサイクルフックとして実行する AWS Lambda 関数を作成します。Lambda 関数で、ネットワークインターフェイスを AWS Global Accelerator エンドポイントに割り当てます。',
   '起動テンプレートのプライベートサブネットにプライマリネットワークインターフェイスを構成します。ユーザーデータオプションを使用して、ブート後に Cloud-init スクリプトを実行し、パブリック IP アドレスの自動割り当てが有効になっているサブネットから 2 番目のネットワークインターフェイスをアタッチします。'],
  'answer': [1],
  'explanation': '問題 1 の説明および補足\xa0 Amazon EC2 で自分の IP アドレスを使用する (BYOIP)\n2 つのネットワークインターフェイスを効果的に構成し、BYOIP プールから Elastic IP アドレスを適切に関連付けることができるため正解です。\n具体的には、プライマリネットワークインターフェイスのサブネットを選択する部分と、ユーザーデータオプションを使用して cloud-init スクリプトを実行し、2 番目のネットワークインターフェイスを割り当てて、BYOIP プールから Elastic IP アドレスを関連付けることができます。Auto Scaling グループ の起動テンプレートを活用して、ネットワークインターフェイスの構成と Elastic IP アドレスの割り当てを自動化し、ネットワークアプライアンスに高可用性の特性を与えることができます。\n\n※Amazon EC2 で自分の IP アドレスを使用する (BYOIP)\nパブリックにルーティング可能な IPv4 または IPv6 アドレス範囲の一部または全部を、オンプレミスのネットワークから AWS アカウントに導入することができます。アドレス範囲は引き続き管理でき、AWS を通じてインターネット上でアドレス範囲をアドバタイズできます。アドレス範囲を AWS に設定すると、そのアドレス範囲はアドレスプールとして AWS アカウントに表示されます。\n参考URL : Amazon EC2 で自分の IP アドレスを使用する (BYOIP)\n\n■以下は間違いです。\n・起動テンプレートのプライベートサブネットにプライマリネットワークインターフェイスを構成します。ユーザーデータオプションを使用して、ブート後に Cloud-init スクリプトを実行し、パブリック IP アドレスの自動割り当てが有効になっているサブネットから 2 番目のネットワークインターフェイスをアタッチします。\n・インスタンスの起動時に Auto Scaling グループのライフサイクルフックとして実行する AWS Lambda 関数を作成します。Lambda 関数で、ネットワークインターフェイスを AWS Global Accelerator エンドポイントに割り当てます。\n→複雑な設定や追加のコンポーネントが必要なため、オペレーションが複雑になり、エラーの原因となる可能性があるため間違いです。\n具体的には、「ユーザーデータオプションを使用して、ブート後に Cloud-init スクリプトを実行し、ネットワークインターフェイスを動的にアタッチする方法」は、オペレーショナルな複雑さを導入し、起動時のスクリプト実行が失敗した場合、トラブルシューティングが困難になる可能性があります。「AWS Lambda 関数を用いて Auto Scaling グループのライフサイクルフックを実行する方法」も、Lambda 関数の実行ポリシー、ロール、トリガーなど、構成要素が増え、管理が複雑になります。いずれの方法もオペレーショナルな複雑さが増すことから、シンプルで安定した運用を考えると、これらの選択肢は最適ではありません。\n\n・起動テンプレートで 2 つのネットワークインターフェイスを構成します。プライマリネットワークインターフェイスをプライベートサブネットの 1 つに作成するように定義します。2 番目のネットワークインターフェイスには、パブリックサブネットの 1 つを選択します。パブリック IP アドレスのソースとして BYOIP プール ID を選択します。\n→Amazon EC2 の起動テンプレートは、ネットワークインターフェイスの設定や Elastic IP の関連付けに関するオプションを提供しています。しかし、BYOIP プール ID を直接指定することは、起動テンプレートの標準機能として提供されていないため間違いです。'},
 {'question': 'ある会社は米国とヨーロッパで事業を展開しています。同社のパブリックアプリケーションは AWS 上で実行されており、3 つの Transit Gateway を使用しています。Transit Gateway は、us-west-2、us-east-1、eu-central-1 リージョンにあります。すべての Transit Gateway はフルメッシュ構成で相互に接続されています。\n\n同社は誤って us-west-2 の Transit Gateway のルートテーブルから eu-central-1 VPC へのルートを削除してしまいました。同社はまた、誤って eu-central-1 の Transit Gateway のルートテーブルから us-west-2 VPC へのルートを削除しました。\n\n最小限の運用オーバーヘッドで構成ミスを特定する最適な方法を選択してください。',
  'option': ['eu-central-1 と us-west-2 の VPC フローログを使用して、欠けているルートを分析します。',
   'AWS Transit Gateway Network Manager の Route Analyzer 機能を使用します。',
   'AWSSupport- SetupIPMonitoringFromVPC AWS Systems Manager オートメーションランブックを使用します。分析のために、ネットワークテレメトリーデータを Amazon CloudWatch Logs にプッシュします。',
   'eu-central-1 または us-west-2 で Amazon VPC トラフィックミラーリングを使用して、パケットキャプチャを取得し、接続の問題をトラブルシューティングします。'],
  'answer': [1],
  'explanation': '問題 2 の説明および補足\xa0 AWS Transit Gateway Network Manager\nAWS Transit Gateway Network Manager の Route Analyzer 機能はルートの分析とミスの特定に直接使用できる機能であるため正解です。\n具体的には、AWS Transit Gateway Network Manager の Route Analyzer 機能は、AWS のネットワークアーキテクチャにおいて、ルーティングポリシーを視覚的に表示し、トラフィックフローを模擬して構成のミスや欠如しているルートを特定できる機能です。ここでは、誤って削除されたルートに関する問題を解決するにあたり、Route Analyzer は、事前に定義されたトラフィックフローを使用して欠如しているかもしれないルートを模擬し、エラーや不足しているルートの情報を提供します。これによって、ユーザーはネットワークのルーティングポリシーに関する洞察を得て、必要な修正や最適化を効率よく行うことができます。\n\n※AWS Transit Gateway Network Manager の Route Analyzer を発表\nグローバルネットワーク内の Transit Gateway でルート分析を実行できるようにする AWS Transit Gateway Network Manager で利用可能な新機能、Route Analyzer を発表します。Route Analyzer を使用すると、指定した送信元と送信先の間のトランジットゲートウェイでネットワーク接続分析を実行するだけで、グローバルネットワーク上の Transit Gateway のルーティング設定を簡単に確認できます。\n参考URL : AWS Transit Gateway Network Manager の Route Analyzer を発表\n\n※以下の画像は、2 つのリージョン間の Transit Gateway のピアリングの状態を確認できます。\n\n画像引用 : AWS Transit Gateway Network Manager の Route Analyzer を試す\n\n■以下は間違いです。\n・eu-central-1 と us-west-2 の VPC フローログを使用して、欠けているルートを分析します。\n・eu-central-1 または us-west-2 で Amazon VPC トラフィックミラーリングを使用して、パケットキャプチャを取得し、接続の問題をトラブルシューティングします。\n→「VPC フローログや Amazon VPC トラフィックミラーリングを使用してネットワークトラフィックを分析する方法」は、直接的なルートの誤りを特定する手段ではないため間違いです。\n\n・AWSSupport- SetupIPMonitoringFromVPC AWS Systems Manager オートメーションランブックを使用します。分析のために、ネットワークテレメトリーデータを Amazon CloudWatch Logs にプッシュします。\n→「AWSSupport- SetupIPMonitoringFromVPC AWS Systems Manager オートメーションランブック」は、IP 監視を行い、ネットワークの異常を検出する一方で、これは間接的なアプローチであり、失われたルートを具体的に特定できないため間違いです。\n参考URL : AWSSupport- SetupIPMonitoringFromVPC'},
 {'question': 'ある企業は、インターネットへの TCP トラフィックを分析したいと考えています。トラフィックの発信元は、VPC 内の Amazon EC2 インスタンスです。EC2 インスタンスは、NAT ゲートウェイ経由で接続を開始します。必要な情報には、送信元および宛先の IP アドレス、ポート、TCP セグメントのペイロードの最初の 8 バイトが含まれます。同社は、必要なデータポイントをすべて収集、保存、分析する必要があります。\n\nこれらの要件を満たすソリューションを選択してください。',
  'option': ['EC2 インスタンスを VPC トラフィックミラーソースとして設定します。トラフィックミラーターゲットにソフトウェアをデプロイして、Amazon CloudWatch Logs にデータを転送します。CloudWatch Logs Insights を使用してデータを分析します。',
   'NAT ゲートウェイを VPC トラフィックミラーソースとして設定します。トラフィックミラーターゲットにソフトウェアをデプロイして、Amazon OpenSearch Service クラスターにデータを転送します。OpenSearch Dashboards を使用してデータを分析します。',
   'EC2 インスタンスで VPC フローログを有効にします。Amazon CloudWatch Logs のデフォルトの形式とログの宛先を指定します。CloudWatch Logs Insights を使用して、フローログデータを分析します。',
   'EC2 インスタンスで VPC フローログを有効にします。カスタム形式とログの保存先を Amazon S3 に指定します。Amazon Athena を使用してフローログデータを分析します。'],
  'answer': [0],
  'explanation': '問題 3 の説明および補足\xa0 VPC Traffic Mirroring の使用\nAmazon VPC Traffic Mirroring を使用して Amazon EC2 インスタンスの TCP トラフィックをミラーリングし、必要なデータ (送信元および宛先の IP アドレス、ポート、TCP セグメントのペイロードの最初の 8 バイト) を収集します。また、ミラーリングされたデータを Amazon CloudWatch Logs に転送し、Amazon CloudWatch Logs Insights を使用してデータを分析します。これにより、TCP トラフィックの全ての必要なデータポイントを収集、保存、分析することができます。\n\n※VPC トラフィックミラーリングの使用\nVPC トラフィックミラーリングを使用して、Amazon EC2 インスタンスの Elastic Network Interface からネットワークトラフィックをコピーし、コンテンツ検査、脅威モニタリング、トラブルシューティングなどのユースケースのために、そのトラフィックをセキュリティおよびモニタリングのアプライアンスに転送します。\n参考URL : VPC トラフィックミラーリングの使用\n\n※(引用)Amazon VPC Traffic Mirroring とは ?\n\n画像引用 : Amazon VPC Traffic Mirroring とは ?\n\n■以下は間違いです。\n・EC2 インスタンスで VPC フローログを有効にします。Amazon CloudWatch Logs のデフォルトの形式とログの宛先を指定します。CloudWatch Logs Insights を使用して、フローログデータを分析します。\n・EC2 インスタンスで VPC フローログを有効にします。カスタム形式とログの保存先を Amazon S3 に指定します。Amazon Athena を使用してフローログデータを分析します。\n→「Amazon VPC フローログ」 では、IP トラフィックのフロー情報を取得できますが、TCP セグメントのペイロードの情報を取得できないため間違いです。\n\n・NAT ゲートウェイを VPC トラフィックミラーソースとして設定します。トラフィックミラーターゲットにソフトウェアをデプロイして、Amazon OpenSearch Service クラスターにデータを転送します。OpenSearch Dashboards を使用してデータを分析します。\n→「NAT ゲートウェイ」に対しての Amazon VPC Traffic Mirroring を有効にできないため間違いです。'},
 {'question': 'ある会社が 2 台のドメインコントローラーで共有サービス VPC を使用しています。ドメインコントローラーは会社のプライベートサブネットに配置されています。同社は、アカウントの新しい VPC に新しいアプリケーションをデプロイしています。アプリケーションは、新しい VPC の Amazon EC2 for Windows Server インスタンスにデプロイされます。このインスタンスは、共有サービス VPC のドメインコントローラーでサポートされている既存の Windows ドメインに参加する必要があります。\n\nTransit Gateway は、共有サービス VPC と新しい VPC の両方に接続されています。同社は、Transit Gateway、共有サービス VPC、および新しい VPC のルートテーブルを更新しました。ドメインコントローラーとインスタンスのセキュリティグループは更新され、ドメイン操作に必要なポート上のトラフィックのみを許可します。インスタンスは、ドメインコントローラーでホストされているドメインに参加できません。\n\n運用上のオーバーヘッドを最小限に抑えて、この問題の原因を特定するのに役立つ手順の組み合わせを選択してください。(2 つ選択)',
  'option': ['既存の EC2 インスタンスをソースとして、別の EC2 インスタンスをターゲットとしてポートミラーリングを使用し、接続試行のパケットキャプチャを取得します。',
   '共有サービス VPC でルート伝播が無効になっていることを確認します。',
   'ドメインコントローラーの 1 つから既存の EC2 インスタンスに ping コマンドを発行します。',
   '共有サービス VPC と新しい VPC の VPC フローログを確認します。',
   'AWS Network Manager を使用して、Transit Gateway ネットワークのルート分析を実行します。既存の EC2 インスタンスをソースとして指定します。最初のドメインコントローラーを宛先として指定します。2 番目のドメインコントローラーに対してルート分析を繰り返します。'],
  'answer': [3, 4],
  'explanation': '問題 4 の説明および補足\xa0 AWS Transit Gateway Network Manager\n・AWS Network Manager を使用して、Transit Gateway ネットワークのルート分析を実行します。既存の EC2 インスタンスをソースとして指定します。最初のドメインコントローラーを宛先として指定します。2 番目のドメインコントローラーに対してルート分析を繰り返します。\n→AWS Network Manager を使用して、Transit Gateway ネットワークのルート分析を実行することで、既存の EC2 インスタンスとドメインコントローラー間の通信経路が正しく設定されているか確認できます。これにより、ネットワークのルーティング設定が原因でドメインへの参加ができないかどうかを特定するのに役立ちます。\n\n※AWS Transit Gateway Network Manager の Route Analyzer を発表\nグローバルネットワーク内の Transit Gateway でルート分析を実行できるようにする AWS Transit Gateway Network Manager で利用可能な新機能、Route Analyzer を発表します。Route Analyzer を使用すると、指定した送信元と送信先の間のトランジットゲートウェイでネットワーク接続分析を実行するだけで、グローバルネットワーク上の Transit Gateway のルーティング設定を簡単に確認できます。\n参考URL : AWS Transit Gateway Network Manager の Route Analyzer を発表\n参考URL : AWS Transit Gateway Network Manager の Route Analyzer を試す\n\n・共有サービス VPC と新しい VPC の VPC フローログを確認します。\n→共有サービス VPC と新しい VPC の VPC フローログを確認することで、EC2 インスタンスとドメインコントローラー間のネットワークトラフィックの状態を監視できます。これは、セキュリティグループやネットワーク ACL が正しく設定されているか、通信がブロックされていないかを確認するのに非常に有用です。\n参考URL : VPC フローログを使用した IP トラフィックのログ記録 - Amazon Virtual Private Cloud\n\n■以下は間違いです。\n・共有サービス VPC でルート伝播が無効になっていることを確認します。\n→ルート伝播が無効になっているかどうかを確認することは、この特定のケースでのドメイン参加の問題に直接的な関係がないため間違いです。ルーティングに関連しているかどうかを初めに確認する方が適切です。\n\n・ドメインコントローラーの 1 つから既存の EC2 インスタンスに ping コマンドを発行します。\n→ドメインへの参加に失敗した理由を明らかにしないため間違いです。\n\n・既存の EC2 インスタンスをソースとして、別の EC2 インスタンスをターゲットとしてポートミラーリングを使用し、接続試行のパケットキャプチャを取得します。\n→ポートミラーリングを使用して接続試行のパケットキャプチャを取得するアプローチは、通常、深度のあるトラブルシューティングで使用されます。このケースでは、操作上のオーバーヘッドを最小限に抑える必要があるため間違いです。'},
 {'question': 'ある会社には、会社のオフィスから ap-southeast-2 リージョンの VPC に 2 Gbps の AWS Direct Connect ホスト接続があります。ネットワークエンジニアは、同じリージョン内の別の Direct Connect ロケーションから 5 Gbps の Direct Connect ホスト接続を追加します。ホスト接続は、オフィスとは異なるルーターに接続され、ルーター間で iBGP セッションが実行されます。\n\nネットワークエンジニアは、VPC が 5 Gbps のホスト接続を使用してオフィスへのトラフィックをルーティングするようにしたいと考えています。5 Gbps のホスト接続がダウンした場合は、2 Gbps のホスト接続にフェイルオーバーする必要があります。\n\nこれらの要件を満たすソリューションを選択してください。',
  'option': ['5 Gbps 接続に接続されているルーターからアウトバウンド BGP ポリシーを構成します。より長い AS_PATH 属性を持つルートを AWS にアドバタイズします。',
   '5 Gbps 接続に接続されているルーターから、より具体性の低いルートをアドバタイズします。',
   '2 Gbps 接続に接続されているルーターからアウトバウンド BGP ポリシーを構成します。より長い AS_PATH 属性を持つルートを AWS にアドバタイズします。',
   '2 Gbps 接続に接続されているルーターから長いプレフィックス経路をアドバタイズします。'],
  'answer': [2],
  'explanation': '問題 5 の説明および補足\xa0 ルーティングポリシーと BGP コミュニティ\nAS_PATH 属性を利用してトラフィックのルーティングを調整することができるため正解です。\n具体的には、「2 Gbps の接続に接続されているルーターから アウトバウンド BGP ポリシー を構成し、より長い AS_PATH 属性を持つルートを AWS Direct Connect にアドバタイズします。」これにより、通常時にはこのルートが不利なものとして選ばれず、5 Gbps の接続を通してトラフィックがルーティングされます。万が一 5 Gbps の接続がダウンした場合、2 Gbps の接続がバックアップとして機能します。これは、BGP が AS_PATH が短い (つまり、経由する AS が少ない) ルートを優先して選ぶという特性を利用した方法です。このため、通常時は 5 Gbps のルート (AS_PATH が短い)、障害時は 2 Gbps のルート (AS_PATH が長い) が選ばれ、問題文の要件を満たします。\n参考URL : ルーティングポリシーと BGP コミュニティ - AWS Direct Connect\n\nAS_Path : このパス属性は、経路広告が通過した全ての AS の AS 番号を結合したものです。パスのループの防止と、距離の目安として利用されます。インバウンドとアウトバウンドの制御の両方で使用され、AS_Path が 短いほど優先されます。 \n参考URL : AWS Direct Connect でのアクティブ / パッシブ BGP 接続の構築\n\n■以下は間違いです。\n・5 Gbps 接続に接続されているルーターからアウトバウンド BGP ポリシーを構成します。より長い AS_PATH 属性を持つルートを AWS にアドバタイズします。\n→5 Gbps の接続に対して長い AS_PATH を持つルートをアドバタイズすると、通常時 (5 Gbps 接続が健全な状態) でも、このルートが不利と見なされ、2 Gbps の接続を優先するため間違いです。\n\n・2 Gbps 接続に接続されているルーターから長いプレフィックス経路をアドバタイズします。\n・5 Gbps 接続に接続されているルーターから、より具体性の低いルートをアドバタイズします。\n→トラフィックのフェイルオーバーに対応しないため間違いです。\n具体的には、それぞれルーティングの調整には取り組んでいますが、その提案されたメソッドでは 5 Gbps のホスト接続がダウンした際に、2 Gbps の接続への自動フェイルオーバーの動作をサポートしていません。これらの選択肢では AWS Direct Connect 接続の冗長性や自動フェイルオーバーの要件は考慮されていないため、問題文の要件を満たすことができません。'},
 {'question': '企業のネットワークエンジニアが、Transit Gateway とオンプレミスネットワーク間で AWS Site-to-Site VPN 接続を構成しています。Site-to-Site VPN 接続は、Transit Gateway 上で等コストマルチパス (ECMP) ルーティングを有効にして、アクティブ / アクティブモードで 2 つのトンネル上で BGP を使用するように構成されています。\n\nネットワークエンジニアがオンプレミスネットワークから Amazon EC2 インスタンスにトラフィックを送信しようとすると、トラフィックは最初のトンネル経由で送信されます。しかし、戻りトラフィックは 2 番目のトンネル経由で受信され、カスタマーゲートウェイでドロップされます。ネットワークエンジニアは、VPN 全体の帯域幅を減らすことなく、この問題を解決する必要があります。\n\nこれらの要件を満たすソリューションを選択してください。',
  'option': ['AS PATH プリペンドとローカルプリファレンスを使用して、一方のトンネルを他方のトンネルよりも優先するように、カスタマーゲートウェイを設定します。',
   'Site-to-Site VPN オプションを構成して、最初のトンネルをプライマリトンネルとして設定し、非対称ルーティングを排除します。',
   'アクティブ / アクティブモードで静的ルーティングを使用するようにサイト間 VPN を構成し、トラフィックが優先パス上を流れるようにします。',
   '非対称ルーティングを許可するように、カスタマゲートウェイ上の仮想トンネルインタフェースを設定します。'],
  'answer': [3],
  'explanation': '問題 6 の説明および補足\xa0 ルートテーブルと VPN ルーティングの優先度\n非対称ルーティングを許可する設定により、問題は解決するため正解です。\n具体的には、カスタマーゲートウェイ上の仮想トンネルインタフェースを設定して非対称ルーティングを許可することで、戻りトラフィックが 2 番目のトンネル経由で受信されてもドロップされなくなります。この設定によって、VPN 全体の帯域幅を減らすことなく問題を解決できます。\n\n※ルートテーブルと VPN ルーティングの優先度\n非対称ルーティングをサポートしていないカスタマーゲートウェイデバイスを使用する場合は、AS PATH プリペンドとローカル設定を使用して、一方のトンネルを他のトンネルよりも優先できます。ただし、出力パスが変更されると、これによりトラフィックがドロップする可能性があります。\n参考URL : ルートテーブルと VPN ルーティングの優先度\n\n※トンネル B よりもトンネル A を優先するように、Site-to-Site VPN 接続を設定するにはどうすればよいですか ?\nAWS VPN 接続 (静的ルーティングタイプ) にアクティブ / アクティブ設定 (両方のトンネルが UP) の場合、トラフィックを送信するために特定のトンネルを優先するように AWS を設定することはできません。例えば、トンネル A は、AWS からオンプレミスネットワークにトラフィックを送信するための優先 VPN トンネルとして AWS によってランダムに選択されました。トンネル A がダウンすると、AWS からのトラフィックは自動的にトンネル B にフェイルオーバーします。\n\n注 : アクティブ / アクティブ設定では、カスタマーゲートウェイで仮想トンネルインターフェイスで非対称ルーティングをアクティブ化する必要があります。 \n\nAWS VPN 接続 (静的ルーティングタイプ) にアクティブ / パッシブ設定 (トンネル A は UP だが、トンネル B が DOWN) の場合、トンネル A がアップ状態であるため、AWS からオンプレミスネットワークへのトラフィックはトンネル A を通過します。\n\n〇動的な AWS VPN 接続の場合\n優先順位の基準を利用して、カスタマーゲートウェイデバイスがある VPN トンネルを他方よりも優先するように設定します。\n\n1. お客様が AWS からのトラフィックを受信することを好むトンネル上の仮想プライベートゲートウェイまたはトランジットゲートウェイに、より具体的なプレフィックスをアドバタイズします。\n2. 各 VPN 接続が BGP を使用するプレフィックスの照合のために、AS PATH が比較され、AS PATH が最短のプレフィックスが優先されます。\n3.AS PATH の長さが同じで、AS_SEQUENCE の最初の AS が複数のパス間で同じである場合、Multi-Exit-Discriminator (MED) が比較されます。MED 値が最も小さいパスが優先され\n参考URL : トンネル B よりもトンネル A を優先するように、Site-to-Site VPN 接続を設定するにはどうすればよいですか ?\n\n■以下は間違いです。\n・アクティブ / アクティブモードで静的ルーティングを使用するようにサイト間 VPN を構成し、トラフィックが優先パス上を流れるようにします。\n→「静的ルーティングの使用」は、ECMP ルーティングと BGP を用いた現在の設定と矛盾するため間違いです。\n具体的には、アクティブ / アクティブモードで静的ルーティングを使用すると、等コストマルチパス (ECMP) ルーティングと BGP の設定が無効になり、それが原因で非対称ルーティングの問題が解決されない可能性があります。この方法は、既存の ECMP と BGP の設定を活用できないため、最適な解決策ではありません。\n\n・Site-to-Site VPN オプションを構成して、最初のトンネルをプライマリトンネルとして設定し、非対称ルーティングを排除します。\n→最初のトンネルをプライマリトンネルとして設定する方法は、帯域幅の有効活用ができないため間違いです。\n具体的には、最初のトンネルをプライマリトンネルとして設定すると、2 つ目のトンネルが利用されなくなり、帯域幅が有効に活用されません。問題の要件には、VPN 全体の帯域幅を減らすことなく問題を解決する必要があります。\n\n・AS PATH プリペンドとローカルプリファレンスを使用して、一方のトンネルを他方のトンネルよりも優先するように、カスタマーゲートウェイを設定します。\n→AS PATH プリペンドとローカルプリファレンスの使用は、問題解決に寄与しないため間違いです。\n具体的には、AS PATH プリペンドとローカルプリファレンスを使用しても、オンプレミスネットワークと Transit Gateway 間での非対称ルーティング問題は解決されません。これらの BGP 属性はルーティングの優先度を制御するものであり、戻りトラフィックがカスタマーゲートウェイでドロップされるという本質的な問題に対処するものではありません。'},
 {'question': 'ネットワークエンジニアは、新しい AWS 環境の DNS アーキテクチャを設計しています。この環境は、オンプレミスのエンドポイントの DNS 名を解決できる必要があり、オンプレミスシステムは AWS エンドポイントの名前を解決できる必要があります。DNS アーキテクチャでは、個々のアカウントにサブドメインを管理できる機能を提供する必要があります。\n\nネットワークエンジニアは、この動作を制御するために、複数のアカウントにわたって機能する単一のルールセットを作成する必要があります。さらに、ネットワークエンジニアは可能な限り AWS ネイティブサービスを使用する必要があります。\n\nこれらの要件を満たす最適な手順の組み合わせを選択してください。(3 つ選択)',
  'option': ['トラフィックが Amazon Route 53 Resolver エンドポイントに到達できるように、他のアカウントと中央アカウントの間にネットワークが存在することを確認します。',
   'トラフィックが AWS Directory Service for Microsoft Active Directory DNS エンドポイントに到達できるように、他のアカウントと中央アカウントの間にネットワークが存在することを確認します。',
   'クラウドドメイン全体のプライベートホストゾーンをホストする中央の AWS アカウントに、Amazon Route 53 Resolver インバウンドおよびアウトバウンドエンドポイントを作成します。オンプレミスの DNS Resolver エンドポイントにトラフィックを転送するための転送ルールを作成します。サブドメイン間のトラフィックを Resolver インバウンドエンドポイントに転送する別のルールを作成します。',
   'クラウドドメイン全体に Amazon Route 53 プライベートホストゾーンを作成します。中央の Route 53 プライベートホストゾーンに関連付けられている他の AWS アカウントに合わせてサブドメインを作成するように計画します。',
   '全体のクラウドドメインのプライベートホストゾーンをホストする中央の AWS アカウントに、AWS Directory Service for Microsoft Active Directory サーバーエンドポイントを作成します。Microsoft Active Directory DNS で条件付き転送ルールを作成し、オンプレミスの DNS Resolver エンドポイントにトラフィックを転送します。サブドメイン間のトラフィックを VPC Resolver に転送する別のルールを作成します。',
   'AWS Resource Access Manager (AWS RAM) を使用して、アカウント間で Amazon Route 53 Resolver のルールを共有します。トラフィックが Route 53 Resolver エンドポイントに到達できるように、他のアカウントと中央アカウントの間にネットワークが存在することを確認します。'],
  'answer': [2, 3, 5],
  'explanation': '問題 7 の説明および補足\xa0 Amazon Route 53 Resolver\n・クラウドドメイン全体に Amazon Route 53 プライベートホストゾーンを作成します。中央の Route 53 プライベートホストゾーンに関連付けられている他の AWS アカウントに合わせてサブドメインを作成するように計画します。\n→Amazon Route 53 を使用してプライベートホストゾーンを作成し、中央のホストゾーンに関連するサブドメインを他の AWS アカウントで管理することで、個別のアカウントでサブドメインを管理できるため正解です。\n\n・クラウドドメイン全体のプライベートホストゾーンをホストする中央の AWS アカウントに、Amazon Route 53 Resolver インバウンドおよびアウトバウンドエンドポイントを作成します。オンプレミスの DNS Resolver エンドポイントにトラフィックを転送するための転送ルールを作成します。サブドメイン間のトラフィックを Resolver インバウンドエンドポイントに転送する別のルールを作成します。\n→Amazon Route 53 Resolver のインバウンドおよびアウトバウンドエンドポイントを使用してオンプレミスの DNS と通信して、オンプレミスと AWS 環境の間で DNS 名を解決するための転送ルールを設定します。これにより、オンプレミスのエンドポイントの DNS 名を解決し、同時に AWS エンドポイントの名前解決をオンプレミスシステムで行うことができます。\n\n※Amazon Route 53 Resolver の概要\nVPC とオンプレミスリソースの両方を利用するワークロードがある場合は、オンプレミスでホストされている DNS レコードを解決する必要もあります。同様に、これらのオンプレミスリソースは、AWS で ホストされている名前を解決する必要がある場合があります。Resolver エンドポイントと条件付き転送ルールにより、オンプレミスリソースと VPC 間の DNS クエリを解決して、VPN または Direct Connect (DX) 経由でハイブリッドクラウド環境を構築できます。具体的には次のとおりです。\n\n・インバウンド Resolver エンドポイントを使用すると、VPC に、オンプレミスネットワークまたは別の VPC から DNS クエリが可能になります。\n・アウトバウンド Resolver エンドポイントを使用すると、VPC から、オンプレミスネットワークまたは別の VPC に DNS クエリが可能になります。\n・Resolver ルールを使用すると、ドメイン名ごとに転送ルールを 1 つ作成し、VPC からオンプレミスの DNS リゾルバーへの DNS クエリ、およびオンプレミスから VPC への DNS クエリを転送するドメイン名を指定できます。ルールは VPC に直接適用され、複数のアカウントで共有できます。\n\nインバウンド (破線矢印 a～e)\nアウトバウンド (実線矢印 1～5)\n\n参考URL : Amazon Route 53 Resolver の概要\n\n・AWS Resource Access Manager (AWS RAM) を使用して、アカウント間で Amazon Route 53 Resolver のルールを共有します。トラフィックが Route 53 Resolver エンドポイントに到達できるように、他のアカウントと中央アカウントの間にネットワークが存在することを確認します。\n→AWS Resource Access Manager (AWS RAM) を使用すると、AWS リソースを他のアカウントと簡単に共有することができます。そのため、選択されたルールを複数のアカウントにわたって簡単に適用することができます。また、Route 53 Resolver ルールを使用することで、DNS クエリの解決方法を指定し、複数のアカウント間で DNS 名を解決することができます。この 2 つのサービスを組み合わせることで、単一のルールセットで複数のアカウントにわたって DNS アーキテクチャを効果的に管理し、オンプレミスと AWS 間での名前解決を実現します。\n\n※(引用) Route 53 Resolver Rule を Resource Access Manager で共有してみた\nアカウント A とアカウント B 間で Route 53 Resolver Rule を共有できます。\n\n画像引用 :Route 53 Resolver Rule を Resource Access Manager で共有してみた\n\n■以下は間違いです。\n・トラフィックが Amazon Route 53 Resolver エンドポイントに到達できるように、他のアカウントと中央アカウントの間にネットワークが存在することを確認します。\n・トラフィックが AWS Directory Service for Microsoft Active Directory DNS エンドポイントに到達できるように、他のアカウントと中央アカウントの間にネットワークが存在することを確認します。\n→「他アカウントとのネットワーク存在を確認する」だけでは全体の要件は満たせないため間違いです。\n\n・全体のクラウドドメインのプライベートホストゾーンをホストする中央の AWS アカウントに、AWS Directory Service for Microsoft Active Directory サーバーエンドポイントを作成します。Microsoft Active Directory DNS で条件付き転送ルールを作成し、オンプレミスの DNS Resolver エンドポイントにトラフィックを転送します。サブドメイン間のトラフィックを VPC Resolver に転送する別のルールを作成します。\n→「AWS Directory Service for Microsoft Active Directory」は、Microsoft Active Directory を AWS 上で実行するサービスであり、AWS ネイティブな方法ではないため間違いです。DNS の要件を満たすためには、Amazon Route 53 といった AWS の DNS サービスを直接利用する方が適切です。'}]}